library(MLmetrics)
res_file <- dir('./output_data/')
res_file <- res_file[grepl("boushey_subset_oos_predict"
,res_file)]
res_file <- sort(paste('./output_data/',res_file,sep=''))
testy <- NULL
peha_auc <- NULL
neha_auc <- NULL
policy_id <- NULL
minyr <- NULL
policy_name <- NULL
for(r in res_file){
load(r)
y_test <- test_data[,"dvadopt"]
peha_auc <- c(peha_auc,PRAUC(peha.test, y_test))
neha_auc <- c(neha_auc,PRAUC(neha.test, y_test))
minyr <-  c(minyr,min(test_data$year))
policy_name <- c(policy_name,test_data$billname[1])
}
plot(minyr,peha_auc/neha_auc)
abline(h=1)
# 2. ### Model Estimation ###
### Packages ###
library(foreign)
library(readstata13)
library(sandwich)
library(lmtest)
library(rms)
library(xtable)
library(neha)
# setwd()
# options(scipen = 99)
## Functions ##
substrRight <- function(x, n){
substr(x, nchar(x) - n + 1, nchar(x))
}
rcse <- function(model, cluster){
require(sandwich); require(lmtest)
G <- length(unique(cluster))
N <- length(resid(model))
k <- length(coef(model))
dfa <- (G/(G - 1)) * (N - 1)/model$df.residual
u <- estfun(model)
u.clust <- matrix(NA, nrow = G, ncol = k)
for(j in 1:k){
u.clust[ , j] <- tapply(u[ , j], cluster, sum)
}
rcov <- dfa * vcov(model) %*% t(u.clust) %*% (u.clust) %*% vcov(model)
rcse <- sqrt(diag(rcov))
result <- coeftest(model, vcov = rcov)
return(list(rcov = rcov, rcse = rcse, result = result))
}
covariates <- c("policycongruent","gub_election","elect2","fedcrime","leg_dem_per_2pty","dem_governor","insession","propneighpol","citidist","squire_prof86","citi6008","crimespendpc","crimespendpcsq","violentthousand","pctwhite","stateincpercap","logpop","counter","counter2","counter3")
load("./output_data/neha_result.RData")
boushey_nona <- neha_boushey[[3]]
edge_effs <- neha_boushey[[2]]
boushey_nona$edge_sum <- apply(boushey_nona[,edge_effs],1,sum)
minyr <- rep(NA,nrow(boushey_nona))
for(i in 1:length(minyr)){
minyr[i] <- min(boushey_nona$year[which(boushey_nona$billname==boushey_nona$billname[i])])
}
boushey_nona$minyr <- minyr
neha_yrfun_formula <- as.formula(paste("dvadopt ~",paste(c(covariates,"edge_sum","minyr"),collapse="+")))
neha.yrfun <- robcov(lrm(neha_yrfun_formula, x = TRUE, y = TRUE, data = boushey_nona,tol=1e-20,maxit=1000), cluster = boushey_nona$styear)
summary(neha.yrfun)
neeha.yrfunn
neeha.yrfun
neha.yrfun
boushey_nona$minyr <- exp(minyr)
neha_yrfun_formula <- as.formula(paste("dvadopt ~",paste(c(covariates,"edge_sum","minyr"),collapse="+")))
neha.yrfun <- robcov(lrm(neha_yrfun_formula, x = TRUE, y = TRUE, data = boushey_nona,tol=1e-20,maxit=1000), cluster = boushey_nona$styear)
boushey_nona$minyr <- minyr^2
neha_yrfun_formula <- as.formula(paste("dvadopt ~",paste(c(covariates,"edge_sum","minyr"),collapse="+")))
neha.yrfun <- robcov(lrm(neha_yrfun_formula, x = TRUE, y = TRUE, data = boushey_nona,tol=1e-20,maxit=1000), cluster = boushey_nona$styear)
neha.yrfun
boushey_nona$minyr <- log(minyr)
neha_yrfun_formula <- as.formula(paste("dvadopt ~",paste(c(covariates,"edge_sum","minyr"),collapse="+")))
neha.yrfun <- robcov(lrm(neha_yrfun_formula, x = TRUE, y = TRUE, data = boushey_nona,tol=1e-20,maxit=1000), cluster = boushey_nona$styear)
neha.yrfun
neha_top_5 <- policy_name[order(peha_auc/neha_auc)[1:5]]
neha_top_5
neha_top_5 <- cbind(policy_name[order(peha_auc/neha_auc)[1:5]],minyr[order(peha_auc/neha_auc)[1:5]])
neha_top_5
order(peha_auc/neha_auc)
minyr[order(peha_auc/neha_auc)[1:5]
]
minyr[order(peha_auc/neha_auc)]
library(MLmetrics)
res_file <- dir('./output_data/')
res_file <- res_file[grepl("boushey_subset_oos_predict"
,res_file)]
res_file <- sort(paste('./output_data/',res_file,sep=''))
testy <- NULL
peha_auc <- NULL
neha_auc <- NULL
policy_id <- NULL
minyr <- NULL
policy_name <- NULL
for(r in res_file){
load(r)
y_test <- test_data[,"dvadopt"]
peha_auc <- c(peha_auc,PRAUC(peha.test, y_test))
neha_auc <- c(neha_auc,PRAUC(neha.test, y_test))
minyr <-  c(minyr,min(test_data$year))
policy_name <- c(policy_name,test_data$billname[1])
}
plot(minyr,peha_auc/neha_auc)
abline(h=1)
library(xtable)
neha_top_5 <- cbind(policy_name[order(peha_auc/neha_auc)[1:5]],minyr[order(peha_auc/neha_auc)[1:5]])
neha_top_5
neha_bot_5 <- cbind(policy_name[order(-peha_auc/neha_auc)[1:5]],minyr[order(-peha_auc/neha_auc)[1:5]])
neha_bot_5
xtable(rbind(neha_top_5,neha_bot_5))
write.csv(rbind(neha_top_5,neha_bot_5),file='top5bot5.csv')
neha_top_10 <- cbind(policy_name[order(peha_auc/neha_auc)[1:10]],minyr[order(peha_auc/neha_auc)[1:10]])
neha_bot_10 <- cbind(policy_name[order(-peha_auc/neha_auc)[1:10]],minyr[order(-peha_auc/neha_auc)[1:10]])
xtable(rbind(neha_top_10,neha_bot_10))
neha_top_5 <- cbind(policy_name[order(peha_auc/neha_auc)[1:5]],minyr[order(peha_auc/neha_auc)[1:5]])
neha_bot_5 <- cbind(policy_name[order(-peha_auc/neha_auc)[1:5]],minyr[order(-peha_auc/neha_auc)[1:5]])
xtable(rbind(neha_top_5,neha_bot_5))
library(MLmetrics)
res_file <- dir('./output_data/')
res_file <- res_file[grepl("boushey_subset_oos_predict"
,res_file)]
res_file <- sort(paste('./output_data/',res_file,sep=''))
testy <- NULL
peha_auc <- NULL
neha_auc <- NULL
policy_id <- NULL
minyr <- NULL
policy_name <- NULL
for(r in res_file){
load(r)
y_test <- test_data[,"dvadopt"]
peha_auc <- c(peha_auc,PRAUC(peha.test, y_test))
neha_auc <- c(neha_auc,PRAUC(neha.test, y_test))
minyr <-  c(minyr,min(test_data$year))
policy_name <- c(policy_name,test_data$billname[1])
}
plot(minyr,peha_auc/neha_auc)
abline(h=1)
library(xtable)
neha_top_5 <- cbind(policy_name[order(peha_auc/neha_auc)[1:5]],minyr[order(peha_auc/neha_auc)[1:5]])
neha_bot_5 <- cbind(policy_name[order(-peha_auc/neha_auc)[1:5]],minyr[order(-peha_auc/neha_auc)[1:5]])
xtable(rbind(neha_top_5,neha_bot_5))
write.csv(rbind(neha_top_5,neha_bot_5),file='top5bot5.csv')
# 2. ### Model Estimation ###
### Packages ###
library(foreign)
library(readstata13)
library(sandwich)
library(lmtest)
library(rms)
library(xtable)
library(neha)
# setwd()
# options(scipen = 99)
## Functions ##
substrRight <- function(x, n){
substr(x, nchar(x) - n + 1, nchar(x))
}
rcse <- function(model, cluster){
require(sandwich); require(lmtest)
G <- length(unique(cluster))
N <- length(resid(model))
k <- length(coef(model))
dfa <- (G/(G - 1)) * (N - 1)/model$df.residual
u <- estfun(model)
u.clust <- matrix(NA, nrow = G, ncol = k)
for(j in 1:k){
u.clust[ , j] <- tapply(u[ , j], cluster, sum)
}
rcov <- dfa * vcov(model) %*% t(u.clust) %*% (u.clust) %*% vcov(model)
rcse <- sqrt(diag(rcov))
result <- coeftest(model, vcov = rcov)
return(list(rcov = rcov, rcse = rcse, result = result))
}
covariates <- c("policycongruent","gub_election","elect2","fedcrime","leg_dem_per_2pty","dem_governor","insession","propneighpol","citidist","squire_prof86","citi6008","crimespendpc","crimespendpcsq","violentthousand","pctwhite","stateincpercap","logpop","counter","counter2","counter3")
load("./output_data/neha_result.RData")
boushey_nona <- neha_boushey[[3]]
edge_effs <- neha_boushey[[2]]
boushey_nona$edge_sum <- apply(boushey_nona[,edge_effs],1,sum)
minyr <- rep(NA,nrow(boushey_nona))
for(i in 1:length(minyr)){
minyr[i] <- min(boushey_nona$year[which(boushey_nona$billname==boushey_nona$billname[i])])
}
boushey_nona$minyr <- minyr
neha_yrfun_formula <- as.formula(paste("dvadopt ~",paste(c(covariates,"edge_sum","minyr"),collapse="+")))
neha.yrfun <- robcov(lrm(neha_yrfun_formula, x = TRUE, y = TRUE, data = boushey_nona,tol=1e-20,maxit=1000), cluster = boushey_nona$styear)
save(list='neha.yearfun',file='./results_summary/minyr_estimate.RData')
save(list='neha.yearfun',file='./results_summaries/minyr_estimate.RData')
save(list='neha.yrfun',file='./results_summaries/minyr_estimate.RData')
