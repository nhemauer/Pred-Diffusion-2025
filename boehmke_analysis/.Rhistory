sim_edges[[s]] <- edges_subset
precision <- c(precision, mean(is.element(edges_subset,edge_effs)))
neha_boehmke_sim[[3]]$edge_sum <- apply(neha_boushey_sim[[3]][,edges_subset],1,sum)
est_neha_sim <- glm(neha_formula,family=binomial,data=neha_boushey_sim[[3]])
gamma[s] <- coef(est_neha_sim)[length(coef(est_neha_sim))]
recall <- c(recall, mean(is.element(edge_effs,edges_subset)))
load(paste("neha_boehmke_sim_subset_zero",s,".RData",sep=""))
sim_edges_zero[[s]] <- edges_subset
n_null <- c(n_null,length(edges_subset))
if(length(edges_subset) > 0){
neha_boehmke_sim[[3]]$edge_sum <- apply(cbind(neha_boehmke_sim[[3]][,edges_subset]),1,sum)
est_neha_sim <- glm(neha_formula,family=binomial,data=neha_boehmke_sim[[3]])
gamma_zero[s] <- coef(est_neha_sim)[length(coef(est_neha_sim))]
}
}
mean(precision)
mean(recall)
sim_res <- c(mean(precision),mean(recall),mean(gamma),sd(gamma),max(n_null),median(n_null))
names(sim_res) <- c("Precision","Recall","Avg gamma","SD gamma","Max null","Med null")
xtable(cbind(sim_res),dig=4)
xtable(table(n_null))
precision <- NULL
recall <- NULL
n_null <- NULL
sim_edges <- list()
sim_edges_zero <- list()
gamma <- numeric(10)
gamma_zero <- numeric(10)
neha_formula <-  as.formula(paste("event ~",paste(c(covariates,"edge_sum"), collapse="+" ),sep=""))
for(s in 1:10){
load(paste("neha_boehmke_sim_subset",s,".RData",sep=""))
sim_edges[[s]] <- edges_subset
precision <- c(precision, mean(is.element(edges_subset,edge_effs)))
neha_boehmke_sim[[3]]$edge_sum <- apply(neha_boehmke_sim[[3]][,edges_subset],1,sum)
est_neha_sim <- glm(neha_formula,family=binomial,data=neha_boushey_sim[[3]])
gamma[s] <- coef(est_neha_sim)[length(coef(est_neha_sim))]
recall <- c(recall, mean(is.element(edge_effs,edges_subset)))
load(paste("neha_boehmke_sim_subset_zero",s,".RData",sep=""))
sim_edges_zero[[s]] <- edges_subset
n_null <- c(n_null,length(edges_subset))
if(length(edges_subset) > 0){
neha_boehmke_sim[[3]]$edge_sum <- apply(cbind(neha_boehmke_sim[[3]][,edges_subset]),1,sum)
est_neha_sim <- glm(neha_formula,family=binomial,data=neha_boehmke_sim[[3]])
gamma_zero[s] <- coef(est_neha_sim)[length(coef(est_neha_sim))]
}
}
mean(precision)
mean(recall)
sim_res <- c(mean(precision),mean(recall),mean(gamma),sd(gamma),max(n_null),median(n_null))
names(sim_res) <- c("Precision","Recall","Avg gamma","SD gamma","Max null","Med null")
xtable(cbind(sim_res),dig=4)
xtable(table(n_null))
precision <- NULL
recall <- NULL
n_null <- NULL
sim_edges <- list()
sim_edges_zero <- list()
gamma <- numeric(10)
gamma_zero <- numeric(10)
neha_formula <-  as.formula(paste("event ~",paste(c(covariates,"edge_sum"), collapse="+" ),sep=""))
for(s in 1:10){
load(paste("neha_boehmke_sim_subset",s,".RData",sep=""))
sim_edges[[s]] <- edges_subset
precision <- c(precision, mean(is.element(edges_subset,edge_effs)))
neha_boehmke_sim[[3]]$edge_sum <- apply(neha_boehmke_sim[[3]][,edges_subset],1,sum)
est_neha_sim <- glm(neha_formula,family=binomial,data=neha_boehmke_sim[[3]])
gamma[s] <- coef(est_neha_sim)[length(coef(est_neha_sim))]
recall <- c(recall, mean(is.element(edge_effs,edges_subset)))
load(paste("neha_boehmke_sim_subset_zero",s,".RData",sep=""))
sim_edges_zero[[s]] <- edges_subset
n_null <- c(n_null,length(edges_subset))
if(length(edges_subset) > 0){
neha_boehmke_sim[[3]]$edge_sum <- apply(cbind(neha_boehmke_sim[[3]][,edges_subset]),1,sum)
est_neha_sim <- glm(neha_formula,family=binomial,data=neha_boehmke_sim[[3]])
gamma_zero[s] <- coef(est_neha_sim)[length(coef(est_neha_sim))]
}
}
mean(precision)
mean(recall)
sim_res <- c(mean(precision),mean(recall),mean(gamma),sd(gamma),max(n_null),median(n_null))
names(sim_res) <- c("Precision","Recall","Avg gamma","SD gamma","Max null","Med null")
xtable(cbind(sim_res),dig=4)
xtable(table(n_null))
# 1. ### summarize predictive performance ###
load('boehmke_oos_results.RData')
load('neha_boehmke_result.RData')
library(MLmetrics)
policy <- neha_boehmke[[3]]$policy
upol <- unique(policy)
pr_peha <- numeric(length(upol))
pr_neha <- numeric(length(upol))
pr_neha_s <- numeric(length(upol))
start <- 1
for(p in 1:length(upol)){
nobs <- length(which(policy==upol[p]))
end <- start + nobs - 1
pr_peha[p] <- PRAUC(peha_scorey[start:end], testy[start:end])
pr_neha[p] <- PRAUC(neha_scorey[start:end], testy[start:end])
pr_neha_s[p] <- PRAUC(neha_scorey_s[start:end], testy[start:end])
start <- start + nobs
}
library(xtable)
fitmat <- rbind(c(mean(pr_peha),mean(pr_neha),mean(pr_neha_s)))
rownames(fitmat) <- c("AUC-PR")
colnames(fitmat) <- c("PEHA","NEHA","NEHA-S")
xtable(fitmat,dig=4)
# 2. ### Model Estimation ###
### Packages ###
library(foreign)
library(readstata13)
library(sandwich)
library(lmtest)
library(rms)
library(fastDummies)
# setwd()
options(scipen = 99)
## Functions ##
substrRight <- function(x, n){
substr(x, nchar(x) - n + 1, nchar(x))
}
rcse <- function(model, cluster){
require(sandwich); require(lmtest)
G <- length(unique(cluster))
N <- length(resid(model))
k <- length(coef(model))
dfa <- (G/(G - 1)) * (N - 1)/model$df.residual
u <- estfun(model)
u.clust <- matrix(NA, nrow = G, ncol = k)
for(j in 1:k){
u.clust[ , j] <- tapply(u[ , j], cluster, sum)
}
rcov <- dfa * vcov(model) %*% t(u.clust) %*% (u.clust) %*% vcov(model)
rcse <- sqrt(diag(rcov))
result <- coeftest(model, vcov = rcov)
return(list(rcov = rcov, rcse = rcse, result = result))
}
## Boehmke et al. (2017) ##
boehmke.p2 <- read.dta13("Boehmke et al. (2017)/boehmke2017.dta", convert.factors = FALSE)
boehmke.p2 <- boehmke.p2[order(boehmke.p2$state, boehmke.p2$year), ]
boehmke.p2$state <- factor(boehmke.p2$state)
boehmke.p2$state <- relevel(boehmke.p2$state, ref = "AL")
# Table 1 (294) #
peha.boehmke <- robcov(lrm(adopt ~ srcs_decay + nbrs_lag + rpcpinc + totpop + legp_squire + citi6010 + unif_rep + unif_dem + time + time_sq + time_cube + state, x = TRUE, y = TRUE, data = boehmke.p2), cluster = boehmke.p2$statepol); gc()
covariates <- c("srcs_decay","nbrs_lag","rpcpinc","totpop","legp_squire","citi6010","unif_rep","unif_dem","time","time_sq","time_cube")
boehmke_nona <- na.omit(boehmke.p2[,c(covariates,"adopt","statepol","policy","state")])
state_dummies <- dummy_cols(boehmke_nona$state)
state_dummies <- state_dummies[,-1]
names(state_dummies) <- substr(names(state_dummies),7,nchar(names(state_dummies)))
covariates <- c(covariates,names(state_dummies)[-1])
boehmke_nona<- data.frame(boehmke_nona,state_dummies)
# Table 1 (294) #
peha.boehmke <- robcov(lrm(adopt ~ srcs_decay + nbrs_lag + rpcpinc + totpop + legp_squire + citi6010 + unif_rep + unif_dem + time + time_sq + time_cube + state, x = TRUE, y = TRUE, data = boehmke_nona), cluster = boehmke_nona$statepol); gc()
library(neha)
est0 <- glm(boehmke_nona$adopt ~ as.matrix(boehmke_nona[,covariates]),family=binomial)
covariates <- covariates[which(!is.na(coef(est0)[-1]))]
boehmke_nona <- neha_boehmke[[3]]
edge_effs <- neha_boehmke[[2]]
neha_formula <- as.formula(paste("adopt ~",paste(c(covariates,edge_effs),collapse="+")))
neha_formula <- as.formula(paste("adopt ~",paste(c(covariates,"edge_sum"),collapse="+")))
boehmke_nona$edge_sum <- apply(boehmke_nona[,edge_effs],1,sum)
neha.boehmke <- robcov(lrm(neha_formula, x = TRUE, y = TRUE, data = boehmke_nona), cluster = boehmke_nona$statepo)
neha.bic <- BIC(glm(neha_formula, family=binomial,data=boehmke_nona))
peha.bic <- BIC(glm(adopt ~ srcs_decay + nbrs_lag + rpcpinc + totpop + legp_squire + citi6010 + unif_rep + unif_dem + time + time_sq + time_cube + state, family=binomial,data=boehmke_nona))
reg_table <- cbind(c(coef(peha.boehmke),NA), c(sqrt(diag(peha.boehmke$var)),NA) , c(coef(neha.boehmke)), c(sqrt(diag(neha.boehmke$var))))
reg_table <- rbind(reg_table,c(NA,NA,NA,exp(neha_boehmke[[1]])))
reg_table <- rbind(reg_table,c(nrow(boehmke_nona),length(upol),NA,NA))
reg_table <- rbind(reg_table,c(NA,peha.bic,NA,neha.bic))
rownames(reg_table)[c(nrow(reg_table)-3,nrow(reg_table)-2,nrow(reg_table)-1,nrow(reg_table))] <- c("gamma","alpha","obs_policy","BIC")
xtable(reg_table)
mean_lp <- mean(cbind(1,neha.boehmke$x)%*%cbind(coef(neha.boehmke)))
times <- 1:50
alpha_fun <- function(time,alpha){
exp(-alpha*time)
}
library(ggplot2)
df <- data.frame(years = times,diffusion_effect=plogis(mean_lp + coef(neha.boehmke)[length(coef(neha.boehmke))]*alpha_fun(times,exp(neha_boehmke[[1]]))))
ggplot(data=df, aes(x=times, y=diffusion_effect, group=1)) +
geom_line() +
ylim(0,.15)+
xlim(min(times),max(times))+
xlab("yrs since source adoption")+
ylab("Pr(adoption)") +
geom_hline(aes(yintercept=plogis(mean_lp)),linetype="dashed")
ggsave("boehmke_decay.pdf", width = 4, height = 3)
df
library(ggplot2)
df <- data.frame(years = times,diffusion_effect=plogis(mean_lp + coef(neha.boehmke)[length(coef(neha.boehmke))]*alpha_fun(times,exp(neha_boehmke[[1]]))))
ggplot(data=df, aes(x=times, y=diffusion_effect, group=1)) +
geom_line() +
ylim(0,.20)+
xlim(min(times),max(times))+
xlab("yrs since source adoption")+
ylab("Pr(adoption)") +
geom_hline(aes(yintercept=plogis(mean_lp)),linetype="dashed")
ggsave("boehmke_decay.pdf", width = 4, height = 3)
summary((boehmke_nona[,edge_effs])
)
# 1. ### summarize predictive performance ###
load('./output_data/neha_boehmke_result.RData')
library(MLmetrics)
library(PRROC)
res_file <- dir('./output_data/')
res_file <- res_file[grepl("boehmke_subset_oos_predict"
,res_file)]
res_file <- paste('./output_data/',res_file,sep="")
load(res_file[[1]])
y_test <- test_data[,"adopt"]
testy <- NULL
peha_scorey <- NULL
neha_scorey <- NULL
neha_scorey_s <- NULL
policy_id <- NULL
for(r in res_file){
load(r)
y_test <- test_data[,"adopt"]
testy <- c(testy,y_test)
peha_scorey <- c(peha_scorey,peha.test)
neha_scorey <- c(neha_scorey,neha.test)
neha_scorey_s <- c(neha_scorey_s,neha.test.s)
policy_id <- c(policy_id,rep(r,nrow(test_data)))
}
pr_peha <- PRAUC(peha_scorey, testy)
pr_neha <- PRAUC(neha_scorey, testy)
pr_neha_s <- PRAUC(neha_scorey_s, testy)
# cluster-bootstrap samples
set.seed(92011)
nboot <- 500
peha_boot <- numeric(nboot)
neha_boot <- numeric(nboot)
neha_s_boot <- numeric(nboot)
for(i in 1:nboot){
sampi <- sample(res_file,length(res_file),rep=T)
peha_scorey_i <- NULL
neha_scorey_i <- NULL
neha_scorey_s_i <- NULL
testy_i <- NULL
for(j in 1:length(sampi)){
peha_scorey_i <- c(peha_scorey_i, peha_scorey[which(policy_id==sampi[j])])
neha_scorey_i <- c(neha_scorey_i, neha_scorey[which(policy_id==sampi[j])])
neha_scorey_s_i <- c(neha_scorey_s_i, neha_scorey_s[which(policy_id==sampi[j])])
testy_i <- c(testy_i, testy[which(policy_id==sampi[j])])
}
peha_boot[i] <- PRAUC(peha_scorey_i, testy_i)
neha_boot[i] <- PRAUC(neha_scorey_i, testy_i)
neha_s_boot[i] <- PRAUC(neha_scorey_s_i, testy_i)
if(i/10 == round(i/10)) print(i)
}
p_peha_neha <- 2*min(c(mean(peha_boot-neha_boot > 0), mean(peha_boot-neha_boot < 0)))
p_peha_neha_s <- 2*min(c(mean(peha_boot-neha_s_boot > 0), mean(peha_boot-neha_s_boot < 0)))
p_neha_neha_s <- 2*min(c(mean(neha_boot-neha_s_boot > 0), mean(neha_boot-neha_s_boot < 0)))
save(list=c("peha_boot","neha_boot","neha_s_boot"),file="./results_summaries/fit_boot.RData")
pr_results <- c(pr_peha,pr_neha,pr_neha_s,p_peha_neha,p_peha_neha_s,p_neha_neha_s)
names(pr_results) <- c("pr_peha","pr_neha","pr_neha_s","p_peha_neha","p_peha_neha_s","p_neha_neha_s")
write.csv(pr_results,file="./results_summaries/pr_results.csv")
pr_results
# 2. ### Model Estimation ###
### Packages ###
library(foreign)
library(readstata13)
library(sandwich)
library(lmtest)
library(rms)
library(fastDummies)
# setwd()
options(scipen = 99)
## Functions ##
substrRight <- function(x, n){
substr(x, nchar(x) - n + 1, nchar(x))
}
rcse <- function(model, cluster){
require(sandwich); require(lmtest)
G <- length(unique(cluster))
N <- length(resid(model))
k <- length(coef(model))
dfa <- (G/(G - 1)) * (N - 1)/model$df.residual
u <- estfun(model)
u.clust <- matrix(NA, nrow = G, ncol = k)
for(j in 1:k){
u.clust[ , j] <- tapply(u[ , j], cluster, sum)
}
rcov <- dfa * vcov(model) %*% t(u.clust) %*% (u.clust) %*% vcov(model)
rcse <- sqrt(diag(rcov))
result <- coeftest(model, vcov = rcov)
return(list(rcov = rcov, rcse = rcse, result = result))
}
## Boehmke et al. (2017) ##
boehmke.p2 <- read.dta13("./replication_data/boehmke2017.dta", convert.factors = FALSE)
boehmke.p2 <- boehmke.p2[order(boehmke.p2$state, boehmke.p2$year), ]
boehmke.p2$state <- factor(boehmke.p2$state)
boehmke.p2$state <- relevel(boehmke.p2$state, ref = "AL")
# Table 1 (294) #
peha.boehmke <- robcov(lrm(adopt ~ srcs_decay + nbrs_lag + rpcpinc + totpop + legp_squire + citi6010 + unif_rep + unif_dem + time + time_sq + time_cube + state, x = TRUE, y = TRUE, data = boehmke.p2), cluster = boehmke.p2$statepol); gc()
covariates <- c("srcs_decay","nbrs_lag","rpcpinc","totpop","legp_squire","citi6010","unif_rep","unif_dem","time","time_sq","time_cube")
boehmke_nona <- na.omit(boehmke.p2[,c(covariates,"adopt","statepol","policy","state")])
state_dummies <- dummy_cols(boehmke_nona$state)
state_dummies <- state_dummies[,-1]
names(state_dummies) <- substr(names(state_dummies),7,nchar(names(state_dummies)))
covariates <- c(covariates,names(state_dummies)[-1])
boehmke_nona<- data.frame(boehmke_nona,state_dummies)
# Table 1 (294) #
peha.boehmke <- robcov(lrm(adopt ~ srcs_decay + nbrs_lag + rpcpinc + totpop + legp_squire + citi6010 + unif_rep + unif_dem + time + time_sq + time_cube + state, x = TRUE, y = TRUE, data = boehmke_nona), cluster = boehmke_nona$statepol); gc()
library(neha)
est0 <- glm(boehmke_nona$adopt ~ as.matrix(boehmke_nona[,covariates]),family=binomial)
covariates <- covariates[which(!is.na(coef(est0)[-1]))]
boehmke_nona <- neha_boehmke[[3]]
edge_effs <- neha_boehmke[[2]]
neha_formula <- as.formula(paste("adopt ~",paste(c(covariates,edge_effs),collapse="+")))
neha_formula <- as.formula(paste("adopt ~",paste(c(covariates,"edge_sum"),collapse="+")))
boehmke_nona$edge_sum <- apply(boehmke_nona[,edge_effs],1,sum)
neha.boehmke <- robcov(lrm(neha_formula, x = TRUE, y = TRUE, data = boehmke_nona), cluster = boehmke_nona$statepo)
neha.bic <- BIC(glm(neha_formula, family=binomial,data=boehmke_nona))
peha.bic <- BIC(glm(adopt ~ srcs_decay + nbrs_lag + rpcpinc + totpop + legp_squire + citi6010 + unif_rep + unif_dem + time + time_sq + time_cube + state, family=binomial,data=boehmke_nona))
reg_table <- cbind(c(coef(peha.boehmke),NA), c(sqrt(diag(peha.boehmke$var)),NA) , c(coef(neha.boehmke)), c(sqrt(diag(neha.boehmke$var))))
reg_table <- rbind(reg_table,c(NA,NA,NA,neha_boehmke[[1]]))
reg_table <- rbind(reg_table,c(nrow(boehmke_nona),length(upol),NA,NA))
reg_table <- rbind(reg_table,c(NA,peha.bic,NA,neha.bic))
rownames(reg_table)[c(nrow(reg_table)-3,nrow(reg_table)-2,nrow(reg_table)-1,nrow(reg_table))] <- c("gamma","alpha","obs_policy","BIC")
library(xtable)
xtable(reg_table,dig=5)
write.csv(reg_table,'./results_summaries/reg_table.csv')
mean_lp <- mean(cbind(1,neha.boehmke$x)%*%cbind(coef(neha.boehmke)))
times <- 1:50
alpha_fun <- function(time,alpha){
exp(-alpha*time)
}
library(ggplot2)
df <- data.frame(years = times,diffusion_effect=plogis(mean_lp + coef(neha.boehmke)[length(coef(neha.boehmke))]*alpha_fun(times,exp(neha_boehmke[[1]]))))
ggplot(data=df, aes(x=times, y=diffusion_effect, group=1)) +
geom_line() +
ylim(0,.20)+
xlim(min(times),max(times))+
xlab("yrs since source adoption")+
ylab("Pr(adoption)") +
geom_hline(aes(yintercept=plogis(mean_lp)),linetype="dashed")
ggsave("./results_summaries/boehmke_decay.pdf", width = 4, height = 3)
edge_list <- do.call('rbind', strsplit(edge_effs,"_"))
library(igraph)
net <- graph_from_edgelist(edge_list)
set.seed(9202011)
pdf("./results_summaries/boehmke_edge_plot.pdf",height=4,width=4,pointsize=8)
plot(net, edge.arrow.size=.4, edge.color="blue", vertex.color="grey75", vertex.frame.color="grey75", vertex.label.color="black")
dev.off()
# 3. ### simulation performance summary ###
# precision, recall, and frequency table of
precision <- NULL
recall <- NULL
n_null <- NULL
sim_edges <- list()
sim_edges_zero <- list()
gamma <- numeric(50)
gamma_zero <- numeric(50)
neha_formula <-  as.formula(paste("event ~",paste(c(covariates,"edge_sum"), collapse="+" ),sep=""))
for(s in 1:50){
load(paste("./output_data/neha_boehmke_sim_subset",s,".RData",sep=""))
sim_edges[[s]] <- edges_subset
precision <- c(precision, mean(is.element(edges_subset,edge_effs)))
neha_boehmke_sim[[3]]$edge_sum <- apply(neha_boehmke_sim[[3]][,edges_subset],1,sum)
est_neha_sim <- glm(neha_formula,family=binomial,data=neha_boehmke_sim[[3]])
gamma[s] <- coef(est_neha_sim)[length(coef(est_neha_sim))]
recall <- c(recall, mean(is.element(edge_effs,edges_subset)))
load(paste("./output_data/neha_boehmke_sim_subset_zero",s,".RData",sep=""))
sim_edges_zero[[s]] <- edges_subset
n_null <- c(n_null,length(edges_subset))
if(length(edges_subset) > 0){
neha_boehmke_sim[[3]]$edge_sum <- apply(cbind(neha_boehmke_sim[[3]][,edges_subset]),1,sum)
est_neha_sim <- glm(neha_formula,family=binomial,data=neha_boehmke_sim[[3]])
gamma_zero[s] <- coef(est_neha_sim)[length(coef(est_neha_sim))]
}
}
mean(precision)
mean(recall)
sim_res <- c(mean(precision),mean(recall),mean(gamma),sd(gamma),max(n_null),median(n_null))
names(sim_res) <- c("Precision","Recall","Avg gamma","SD gamma","Max null","Med null")
xtable(cbind(sim_res),dig=4)
write.csv(sim_res,'./results_summaries/simulation_results.csv')
p<-ggplot(df, aes(x=gamma)) +
geom_histogram(color="black", fill="white",bins=10)
p+ geom_vline(aes(xintercept=coef(neha.boehmke)["edge_sum"]),
color="blue", linetype="dashed", size=1) + geom_vline(aes(xintercept=mean(gamma)),
color="red", size=1)
ggsave("./results_summaries/boehmke_gamma_sim.pdf", width = 4, height = 3)
# 2. ### Model Estimation ###
### Packages ###
library(foreign)
library(readstata13)
library(sandwich)
library(lmtest)
library(rms)
library(fastDummies)
# setwd()
options(scipen = 99)
## Functions ##
substrRight <- function(x, n){
substr(x, nchar(x) - n + 1, nchar(x))
}
rcse <- function(model, cluster){
require(sandwich); require(lmtest)
G <- length(unique(cluster))
N <- length(resid(model))
k <- length(coef(model))
dfa <- (G/(G - 1)) * (N - 1)/model$df.residual
u <- estfun(model)
u.clust <- matrix(NA, nrow = G, ncol = k)
for(j in 1:k){
u.clust[ , j] <- tapply(u[ , j], cluster, sum)
}
rcov <- dfa * vcov(model) %*% t(u.clust) %*% (u.clust) %*% vcov(model)
rcse <- sqrt(diag(rcov))
result <- coeftest(model, vcov = rcov)
return(list(rcov = rcov, rcse = rcse, result = result))
}
## Boehmke et al. (2017) ##
boehmke.p2 <- read.dta13("./replication_data/boehmke2017.dta", convert.factors = FALSE)
boehmke.p2 <- boehmke.p2[order(boehmke.p2$state, boehmke.p2$year), ]
boehmke.p2$state <- factor(boehmke.p2$state)
boehmke.p2$state <- relevel(boehmke.p2$state, ref = "AL")
# Table 1 (294) #
peha.boehmke <- robcov(lrm(adopt ~ srcs_decay + nbrs_lag + rpcpinc + totpop + legp_squire + citi6010 + unif_rep + unif_dem + time + time_sq + time_cube + state, x = TRUE, y = TRUE, data = boehmke.p2,tol=1e-20,maxit=1000), cluster = boehmke.p2$statepol); gc()
covariates <- c("srcs_decay","nbrs_lag","rpcpinc","totpop","legp_squire","citi6010","unif_rep","unif_dem","time","time_sq","time_cube")
boehmke_nona <- na.omit(boehmke.p2[,c(covariates,"adopt","statepol","policy","state")])
state_dummies <- dummy_cols(boehmke_nona$state)
state_dummies <- state_dummies[,-1]
names(state_dummies) <- substr(names(state_dummies),7,nchar(names(state_dummies)))
covariates <- c(covariates,names(state_dummies)[-1])
boehmke_nona<- data.frame(boehmke_nona,state_dummies)
# Table 1 (294) #
peha.boehmke <- robcov(lrm(adopt ~ srcs_decay + nbrs_lag + rpcpinc + totpop + legp_squire + citi6010 + unif_rep + unif_dem + time + time_sq + time_cube + state, x = TRUE, y = TRUE, data = boehmke_nona,tol=1e-200,maxit=1000), cluster = boehmke_nona$statepol); gc()
library(neha)
est0 <- glm(boehmke_nona$adopt ~ as.matrix(boehmke_nona[,covariates]),family=binomial)
covariates <- covariates[which(!is.na(coef(est0)[-1]))]
boehmke_nona <- neha_boehmke[[3]]
edge_effs <- neha_boehmke[[2]]
neha_formula <- as.formula(paste("adopt ~",paste(c(covariates,edge_effs),collapse="+")))
neha_formula <- as.formula(paste("adopt ~",paste(c(covariates,"edge_sum"),collapse="+")))
boehmke_nona$edge_sum <- apply(boehmke_nona[,edge_effs],1,sum)
neha.boehmke <- robcov(lrm(neha_formula, x = TRUE, y = TRUE, data = boehmke_nona), cluster = boehmke_nona$statepo)
peha_formula <- as.formula(paste("adopt ~",paste(c(covariates),collapse="+")))
peha.boehmke <- robcov(lrm(peha_formula, x = TRUE, y = TRUE, data = boehmke_nona), cluster = boehmke_nona$statepo)
minyr <- numeric(nrow(boehmke_nona))
for(i in 1:nrow(boehmke_nona)){
minyr[i] <- min(boehmke_nona$year[which(boehmke_nona$policy==boehmke_nona$policy[i])])
}
boehmke_nona$minyr <- minyr
neha_formula_yrfun <- as.formula(paste("adopt ~",paste(c(covariates,"edge_sum","minyr"),collapse="+")))
neha.yrfun <- robcov(lrm(neha_formula_yrfun, x = TRUE, y = TRUE, data = boehmke_nona,tol=1e-20,maxit=1000), cluster = boehmke_nona$statepo)
save(list='neha.yrfun',file='./results_summaries/minyr_estimate.RData')
# 2. ### Model Estimation ###
### Packages ###
library(foreign)
library(readstata13)
library(sandwich)
library(lmtest)
library(rms)
library(fastDummies)
# setwd()
options(scipen = 99)
## Functions ##
substrRight <- function(x, n){
substr(x, nchar(x) - n + 1, nchar(x))
}
rcse <- function(model, cluster){
require(sandwich); require(lmtest)
G <- length(unique(cluster))
N <- length(resid(model))
k <- length(coef(model))
dfa <- (G/(G - 1)) * (N - 1)/model$df.residual
u <- estfun(model)
u.clust <- matrix(NA, nrow = G, ncol = k)
for(j in 1:k){
u.clust[ , j] <- tapply(u[ , j], cluster, sum)
}
rcov <- dfa * vcov(model) %*% t(u.clust) %*% (u.clust) %*% vcov(model)
rcse <- sqrt(diag(rcov))
result <- coeftest(model, vcov = rcov)
return(list(rcov = rcov, rcse = rcse, result = result))
}
## Boehmke et al. (2017) ##
boehmke.p2 <- read.dta13("./replication_data/boehmke2017.dta", convert.factors = FALSE)
boehmke.p2 <- boehmke.p2[order(boehmke.p2$state, boehmke.p2$year), ]
boehmke.p2$state <- factor(boehmke.p2$state)
boehmke.p2$state <- relevel(boehmke.p2$state, ref = "AL")
# Table 1 (294) #
peha.boehmke <- robcov(lrm(adopt ~ srcs_decay + nbrs_lag + rpcpinc + totpop + legp_squire + citi6010 + unif_rep + unif_dem + time + time_sq + time_cube + state, x = TRUE, y = TRUE, data = boehmke.p2,tol=1e-20,maxit=1000), cluster = boehmke.p2$statepol); gc()
covariates <- c("srcs_decay","nbrs_lag","rpcpinc","totpop","legp_squire","citi6010","unif_rep","unif_dem","time","time_sq","time_cube")
boehmke_nona <- na.omit(boehmke.p2[,c(covariates,"adopt","statepol","policy","state")])
state_dummies <- dummy_cols(boehmke_nona$state)
state_dummies <- state_dummies[,-1]
names(state_dummies) <- substr(names(state_dummies),7,nchar(names(state_dummies)))
covariates <- c(covariates,names(state_dummies)[-1])
boehmke_nona<- data.frame(boehmke_nona,state_dummies)
# Table 1 (294) #
peha.boehmke <- robcov(lrm(adopt ~ srcs_decay + nbrs_lag + rpcpinc + totpop + legp_squire + citi6010 + unif_rep + unif_dem + time + time_sq + time_cube + state, x = TRUE, y = TRUE, data = boehmke_nona,tol=1e-200,maxit=1000), cluster = boehmke_nona$statepol); gc()
library(neha)
est0 <- glm(boehmke_nona$adopt ~ as.matrix(boehmke_nona[,covariates]),family=binomial)
covariates <- covariates[which(!is.na(coef(est0)[-1]))]
boehmke_nona <- neha_boehmke[[3]]
edge_effs <- neha_boehmke[[2]]
neha_formula <- as.formula(paste("adopt ~",paste(c(covariates,edge_effs),collapse="+")))
neha_formula <- as.formula(paste("adopt ~",paste(c(covariates,"edge_sum"),collapse="+")))
boehmke_nona$edge_sum <- apply(boehmke_nona[,edge_effs],1,sum)
neha.boehmke <- robcov(lrm(neha_formula, x = TRUE, y = TRUE, data = boehmke_nona), cluster = boehmke_nona$statepo)
peha_formula <- as.formula(paste("adopt ~",paste(c(covariates),collapse="+")))
peha.boehmke <- robcov(lrm(peha_formula, x = TRUE, y = TRUE, data = boehmke_nona), cluster = boehmke_nona$statepo)
minyr <- numeric(nrow(boehmke_nona))
for(i in 1:nrow(boehmke_nona)){
minyr[i] <- min(boehmke_nona$year[which(boehmke_nona$policy==boehmke_nona$policy[i])])
}
boehmke_nona$minyr <- minyr
neha_formula_yrfun <- as.formula(paste("adopt ~",paste(c(covariates,"edge_sum","minyr"),collapse="+")))
neha.yrfun <- robcov(lrm(neha_formula_yrfun, x = TRUE, y = TRUE, data = boehmke_nona,tol=1e-20,maxit=1000), cluster = boehmke_nona$statepo)
save(list='neha.yrfun',file='./results_summaries/minyr_estimate.RData')
neha.yrfun
